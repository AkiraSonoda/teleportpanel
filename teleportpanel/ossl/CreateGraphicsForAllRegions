// (c) Akira Sonoda 2010
//
key regionTexture;
key remoteChannel;

string regionName;
string hostname = "suai.dyndns.org";

integer minX = 10400;
integer maxX = 10420;
integer minY = 10065;
integer maxY = 10085;

integer actX = 0;
integer actY = 0;

init() {
    llOpenRemoteDataChannel(); // create an XML-RPC channel
    // llOwnerSay("My key is " + (string)llGetKey());
}


default {
    state_entry() {
        init();
    }

    state_exit() {
        return;
    }

    on_rez(integer param) {
        llResetScript();
    }

    remote_data(integer type, key channel, key message_id, string sender, integer ival, string sval) {
         if (type == REMOTE_DATA_CHANNEL) { // channel created
            remoteChannel = channel;
            llOwnerSay("Ready to receive requests on channel \"" + (string)channel + "\"");
            llHTTPRequest("http://" + hostname + ":8080/teleportpanel/UpdateConfigurationValue?co=DEREOS&re=Zentrale Plaza&ke=XMLRPC_TPPANEL_CONFIG_CHANNEL&val="+(string)channel,[],"");

         } else {
             llSay(DEBUG_CHANNEL,"Unexpected event type");
         }
     }

     http_response(key rid, integer status, list metadata, string msg) {
        llStringTrim(msg,STRING_TRIM);
        llOwnerSay("Message from UpdateConfigurationValue: " + msg );
        if(msg == "ok") {
            state receiving; // start handling requests
        }
    }


}

state receiving {

    state_entry() {
        llOwnerSay("Ready to receive information from outside SL");
    }

    state_exit() {
        llOwnerSay("No longer receiving information from outside SL.");
        llCloseRemoteDataChannel(remoteChannel);
    }

    on_rez(integer param) {
        llResetScript();
    }

    remote_data(integer type, key channel, key message_id, string sender, integer ival, string sval) {
        if (type == REMOTE_DATA_REQUEST) { // handle requests sent to us
            llRemoteDataReply(channel,NULL_KEY,"I got it",2008);
            llOwnerSay("I just received data in "+ llGetRegionName() +
                       " at position " + (string)llGetPos() + "\n" +
                       "The string was " +  sval + "\nThe number was " + (string)ival + ".");
            if(sval == "start") {
                actX = minX-1;
                actY = minY;
                state coordinator;
            } else {
                state default;
            }
        } else {
            state default;
        }
    }
}
state coordinator {
    state_entry() {
        if ((actX == maxX) && (actY == maxY) ) {
            actX = minX-1;
            actY = minY;
            llSay(0,"Maptiles Created,");
            llSay(0,"Maptiles Doing the montage,");
            state montage;
        } else {
            if(actX == maxX) {
              actY = actY+1;
              actX = minX-1;
            }
            state get_name;
        }
    }

    state_exit() {
        actX = actX + 1;
    }
}


state get_name {
    state_entry() {
        llHTTPRequest("http://" + hostname + ":8080/teleportpanel/GetRegionNameByCoords?xc="+actX+"&yc="+actY,[],"");
    }

    http_response(key rid, integer status, list metadata, string msg) {
        llStringTrim(msg,STRING_TRIM);
        regionName = msg;
        regionTexture = osGetRegionMapTexture(regionName);
        llOwnerSay (regionName + " with maptile texture: " + (string) regionTexture );
        state get_texture;
    }

}

state get_texture {

    state_entry() {
        // had to tweak the webassets script in order to not return the image but to return
        // the UUID passed to the script, because I was experiencing problems with the images returned
        // to the script.
        llHTTPRequest("http://"+hostname+"/webassets/osasset.php?id="+(string) regionTexture,[],"");
    }

    http_response(key rid, integer status, list metadata, string msg) {
        // llOwnerSay("Result from webassets: "+msg);
        state update_uuid;
    }
}

state update_uuid {
    state_entry() {
        llHTTPRequest("http://" + hostname + ":8080/teleportpanel/UpdateRegionUUID?cr="+regionName+"&uuid="+ (string) regionTexture,[],"");
    }

    http_response(key rid, integer status, list metadata, string msg) {
        // llOwnerSay (msg);
        state coordinator;
    }
}


state montage {
    state_entry() {
        llHTTPRequest("http://" + hostname + ":8080/teleportpanel/MontagePics?minx="+(string) minX+
            "&maxx="+(string) maxX+"&miny="+(string) minY+
            "&maxy="+(string)maxY+
            "&co=DEREOS&re=Zentrale Plaza",[],"");
    }

    http_response(key rid, integer status, list metadata, string msg) {
        llStringTrim(msg,STRING_TRIM);
        if( msg == "ok") {
            llSay(0, "Montage ok");
            llSay(0, "You can check the result here: http://"+ hostname +"/MontagePic.htm ");
            state default;
        } else {
            llSay(0, "Montage failed");
            llOwnerSay(msg);
            state default;
        }
    }

}
